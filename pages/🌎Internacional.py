#################### Bibliotecas e M√≥dulos ####################
# Fazer os imports necess√°rios
import numpy as np
import pandas as pd
import streamlit as st
from PIL import Image
import plotly.express as px

# Importar o m√≥dulo de tratamento dos dados
import tratamento

#################### Leitura e Tratamento dos Dados ####################
# Ler os dados originais
dados_originais = pd.read_csv('zomato.csv')

# Tratar os dados originais com as fun√ß√µes criadas
dados_originais['country_name'] = dados_originais['Country Code'].map(tratamento.country_name)
dados_originais['price_category'] = dados_originais['Price range'].map(tratamento.create_price_category)
dados_originais['price_color_name'] = dados_originais['Rating color'].map(tratamento.set_color_name)
dados = tratamento.rename_columns(dados_originais)

#################### Configura√ß√µes da p√°gina do Streamlit ####################
st.set_page_config(page_title='Internacional', layout='wide', page_icon='üåé')

#################### T√≠tulo da p√°gina do Streamlit ####################
st.markdown('# Dashboard - Internacional')

#################### Barra lateral do Streamlit ####################
# Inserir o logo da empresa
image = Image.open('zomato_logo.png')
st.sidebar.image(image, width=200)

# Criar o t√≠tulo e subt√≠tulo da barra lateral
st.sidebar.markdown('# Zomato')
st.sidebar.markdown('## The Fastest Delivery')
st.sidebar.markdown('---')

# Criar o filtro do pa√≠s
filtro_pais = st.sidebar.multiselect('Selecione os pa√≠ses:',
                                     ['India', 'United States of America', 'Philippines',
                                      'South Africa', 'England', 'New Zealand',
                                      'United Arab Emirates', 'Australia', 'Brazil',
                                      'Canada', 'Indonesia', 'Turkey',
                                      'Qatar', 'Singapore', 'Sri Lanka'],
                                     default=['India', 'United States of America', 'Philippines',
                                      'South Africa', 'England', 'New Zealand',
                                      'United Arab Emirates', 'Australia', 'Brazil',
                                      'Canada', 'Indonesia', 'Turkey',
                                      'Qatar', 'Singapore', 'Sri Lanka'])

linhas_selecionadas = dados['country_name'].isin(filtro_pais)
dados = dados.loc[linhas_selecionadas, :]
st.sidebar.markdown('---')

#################### Layout do Streamlit ####################
# Criar e nomear as tabs (abas) 
tab_1, tab_2 = st.tabs(['Vis√£o Pa√≠ses', 'Vis√£o Cidades'])

### Preencher a tab 1 (Vis√£o Pa√≠ses)
with tab_1:
  # Criar gr√°fico da quantidade de cidades registradas por pa√≠s
  with st.container():
    aux = dados.groupby(['country_name'])['city'].nunique().sort_values(ascending=False).reset_index()
    fig = px.bar(aux, x='country_name', y='city',
             labels = {'country_name':'Pa√≠s', 'city':'Quantidade de cidades'},
             title = 'Quantidade de Cidades Registradas por Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)
    
  # Criar gr√°fico da quantidade de restaurantes registrados por pa√≠s
  with st.container():
    aux = dados.groupby(['country_name'])['restaurant_id'].nunique().sort_values(ascending=False).reset_index()
    fig = px.bar(aux, x='country_name', y='restaurant_id',
             labels = {'country_name':'Pa√≠s', 'restaurant_id':'Quantidade de restaurantes'},
             title = 'Quantidade de Restaurantes Registrados por Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)

  # Criar gr√°fico da distribui√ß√£o das avalia√ß√µes dos restaurantes por pa√≠s
  with st.container():
    fig = px.box(dados, x='country_name', y='aggregate_rating',
             labels = {'country_name':'Pa√≠s', 'aggregate_rating':'Avalia√ß√µes agregadas'},
             title = 'Avalia√ß√µes Agregadas por Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)
    
### Preencher a tab 2 (Vis√£o Cidades)
with tab_2:
  # Criar gr√°fico da quantidade da quantidade de avalia√ß√µes por cidade e pa√≠s
  with st.container():
    aux = dados.groupby(['city', 'country_name'])['votes'].sum().sort_values(ascending=False).reset_index()
    fig = px.bar(aux, x='city', y='votes', color='country_name',
                 color_discrete_sequence=px.colors.qualitative.G10,
             labels = {'city':'Cidade', 'votes':'Quantidade de avalia√ß√µes', 'country_name':'Pa√≠s'},
             title = 'Quantidade de Avalia√ß√µes por Cidade e Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)
    
  # Criar gr√°fico da quantidade de restaurantes por cidade e pa√≠s
  with st.container():
    aux = dados.groupby(['city', 'country_name'])['restaurant_id'].nunique().sort_values(ascending=False).reset_index()
    fig = px.bar(aux, x='city', y='restaurant_id', color='country_name',
                 color_discrete_sequence=px.colors.qualitative.G10,
             labels = {'city':'Cidade', 'restaurant_id':'Quantidade de restaurantes', 'country_name':'Pa√≠s'},
             title = 'Quantidade de Restaurantes por Cidade e Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)

  # Criar gr√°fico da quantidade de culin√°rias por cidade e pa√≠s
  with st.container():
    aux = dados.groupby(['city', 'country_name'])['cuisines'].nunique().sort_values(ascending=False).reset_index()
    fig = px.bar(aux, x='city', y='cuisines', color='country_name',
                 color_discrete_sequence=px.colors.qualitative.G10,
             labels = {'city':'Cidade', 'cuisines':'Quantidade de culin√°rias', 'country_name':'Pa√≠s'},
             title = 'Quantidade de Culin√°rias por Cidade e Pa√≠s')
    st.plotly_chart(fig, use_container_width=True)
                   
    